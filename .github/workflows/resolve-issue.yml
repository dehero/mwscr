name: resolve-issue

concurrency:
  group: maintain

on:
  issues:
    types: [edited, reopened, labeled]

jobs:
  resolve-issue:
    if:
      contains(github.event.issue.labels.*.name, 'data-patch') || contains(github.event.issue.labels.*.name,
      'post-proposal') || contains(github.event.issue.labels.*.name, 'post-request') ||
      contains(github.event.issue.labels.*.name, 'post-editing') || contains(github.event.issue.labels.*.name,
      'post-location')
    runs-on: ubuntu-latest
    env:
      GITHUB_ACTION_CONTEXT: ${{ toJson(github) }}
      GITHUB_BOT_EMAIL: '${{ secrets.BOT_EMAIL }}'
      GITHUB_BOT_NAME: '${{ secrets.BOT_NAME }}'
      SITE_SSH_HOST: '${{ secrets.SITE_SSH_HOST }}'
      SITE_SSH_USER: '${{ secrets.SITE_SSH_USER }}'
      SITE_SSH_PRIVATE_KEY: '${{ secrets.SITE_SSH_PRIVATE_KEY }}'
      SITE_SSH_PATH: '${{ secrets.SITE_SSH_PATH }}'
      SITE_SSH_STORE_PATH: '${{ secrets.SITE_SSH_STORE_PATH }}'
      YANDEX_DISK_STORE_PATH: '${{ secrets.YANDEX_DISK_STORE_PATH }}'
      YANDEX_DISK_ACCESS_TOKEN: '${{ secrets.YANDEX_DISK_ACCESS_TOKEN }}'
    steps:
      - uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Resolve issue and commit changes
        # To use BOT user name and email
        # git config user.email ${{ env.GITHUB_BOT_EMAIL }}
        # git config user.name ${{ env.GITHUB_BOT_NAME }}
        run: |
          npm run resolve-github-issue
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
          git add -A
          git diff-index --quiet HEAD || git commit -m "chore(resolve-issue): resolve #${{ github.event.issue.number }}"
          git pull --rebase -X ours
          git push

      - name: Test site connectivity
        run: |
          curl -sS ${{ secrets.SITE_SSH_HOST }}

      - name: Build site
        run: npm run build

      - name: Deploy site
        uses: easingthemes/ssh-deploy@v5.1.0
        env:
          SSH_PRIVATE_KEY: ${{ env.SITE_SSH_PRIVATE_KEY }}
          ARGS: '-rltgoDzvO --delete'
          SOURCE: 'dist/client/'
          REMOTE_HOST: ${{ env.SITE_SSH_HOST }}
          REMOTE_USER: ${{ env.SITE_SSH_USER }}
          TARGET: ${{ env.SITE_SSH_PATH }}
          EXCLUDE: '/store/, /uploads/'
          SCRIPT_BEFORE: |
            whoami
            ls -al > /dev/null
          SCRIPT_AFTER: |
            whoami
            ls -al > /dev/null
            echo $RSYNC_STDOUT
            exit
